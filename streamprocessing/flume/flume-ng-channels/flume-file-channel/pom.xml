<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>flume-ng-channels</artifactId>
    <groupId>org.apache.flume</groupId>
    <version>1.10.0-SNAPSHOT</version>
  </parent>

  <groupId>org.apache.flume.flume-ng-channels</groupId>
  <artifactId>flume-file-channel</artifactId>
  <name>Flume NG file-based channel</name>

  <properties>
    <!-- TODO fix spotbugs violations -->
    <spotbugs.maxAllowedViolations>86</spotbugs.maxAllowedViolations>
    <pmd.maxAllowedViolations>486</pmd.maxAllowedViolations>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.apache.flume</groupId>
      <artifactId>flume-ng-sdk</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.flume</groupId>
      <artifactId>flume-ng-configuration</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.flume</groupId>
      <artifactId>flume-ng-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-reflect</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-jcl</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-1.2-api</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.mapdb</groupId>
      <artifactId>mapdb</artifactId>
    </dependency>

    <dependency>
      <groupId>org.xerial.snappy</groupId>
      <artifactId>snappy-java</artifactId>
    </dependency>

  </dependencies>

  <profiles>

   <profile>
     <id>compile-proto</id>
     <build>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <configuration>
            <skipTests>false</skipTests>
          </configuration>
          <executions>
            <execution>
              <id>compile-proto</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target>
                  <echo file="target/compile-proto.sh">
                      PROTO_DIR=src/main/proto
                      JAVA_DIR=src/main/java
                      which cygpath 2&gt; /dev/null
                      if [ $? = 1 ]; then
                        IS_WIN=false
                      else
                        IS_WIN=true
                        WIN_PROTO_DIR=`cygpath --windows $PROTO_DIR`
                        WIN_JAVA_DIR=`cygpath --windows $JAVA_DIR`
                      fi
                      mkdir -p $JAVA_DIR 2&gt; /dev/null
                      for PROTO_FILE in `ls $PROTO_DIR/*.proto 2&gt; /dev/null`
                      do
                          if [ "$IS_WIN" = "true" ]; then
                            protoc -I$WIN_PROTO_DIR --java_out=$WIN_JAVA_DIR $PROTO_FILE
                          else
                            protoc -I$PROTO_DIR --java_out=$JAVA_DIR $PROTO_FILE
                          fi
                      done
                  </echo>
                  <exec executable="sh" dir="${basedir}" failonerror="true">
                    <arg line="target/compile-proto.sh"/>
                  </exec>
                </target>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
     </build>
   </profile>

  </profiles>



</project>
